[{"/usr/src/app/react-front/src/App.js":"1","/usr/src/app/react-front/src/reportWebVitals.js":"2","/usr/src/app/react-front/src/index.js":"3","/usr/src/app/react-front/src/containers/Foods.jsx":"4","/usr/src/app/react-front/src/containers/Restaurants.jsx":"5","/usr/src/app/react-front/src/containers/Orders.jsx":"6","/usr/src/app/react-front/src/apis/restaurants.js":"7","/usr/src/app/react-front/src/urls/index.js":"8","/usr/src/app/react-front/src/reducers/restaurants.js":"9","/usr/src/app/react-front/src/constants.js":"10","/usr/src/app/react-front/src/reducers/foods.js":"11","/usr/src/app/react-front/src/components/FoodWrapper.jsx":"12","/usr/src/app/react-front/src/components/StyledText.jsx":"13","/usr/src/app/react-front/src/components/FoodOrderDialog.jsx":"14","/usr/src/app/react-front/src/components/Buttons/OrderButton.jsx":"15","/usr/src/app/react-front/src/components/NewOrderConfirmDialog.jsx":"16","/usr/src/app/react-front/src/style_constants.js":"17","/usr/src/app/react-front/src/components/Buttons/CountUpButton.jsx":"18","/usr/src/app/react-front/src/apis/line_foods.js":"19"},{"size":921,"mtime":1611919498832,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611759530504,"results":"22","hashOfConfig":"21"},{"size":500,"mtime":1611759530489,"results":"23","hashOfConfig":"21"},{"size":5619,"mtime":1612002342305,"results":"24","hashOfConfig":"21"},{"size":2954,"mtime":1611997362780,"results":"25","hashOfConfig":"21"},{"size":139,"mtime":1611918591922,"results":"26","hashOfConfig":"21"},{"size":244,"mtime":1611931415149,"results":"27","hashOfConfig":"21"},{"size":440,"mtime":1611932194865,"results":"28","hashOfConfig":"21"},{"size":651,"mtime":1611988985236,"results":"29","hashOfConfig":"21"},{"size":149,"mtime":1611929572124,"results":"30","hashOfConfig":"21"},{"size":609,"mtime":1611991153965,"results":"31","hashOfConfig":"21"},{"size":1082,"mtime":1611993427236,"results":"32","hashOfConfig":"21"},{"size":195,"mtime":1611993394542,"results":"33","hashOfConfig":"21"},{"size":2621,"mtime":1611998847274,"results":"34","hashOfConfig":"21"},{"size":495,"mtime":1611998700147,"results":"35","hashOfConfig":"21"},{"size":1006,"mtime":1611999514617,"results":"36","hashOfConfig":"21"},{"size":200,"mtime":1611929678274,"results":"37","hashOfConfig":"21"},{"size":233,"mtime":1611998673694,"results":"38","hashOfConfig":"21"},{"size":681,"mtime":1612007595517,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1s4dvfa",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/react-front/src/App.js",[],["84","85"],"/usr/src/app/react-front/src/reportWebVitals.js",[],["86","87"],"/usr/src/app/react-front/src/index.js",[],["88","89"],"/usr/src/app/react-front/src/containers/Foods.jsx",["90"],"import React, { Fragment, useReducer, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, Link } from \"react-router-dom\";\n\n// components\nimport { LocalMallIcon } from '../components/Icons';\nimport { FoodWrapper } from '../components/FoodWrapper';\nimport { NewOrderConfirmDialog } from '../components/NewOrderConfirmDialog';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\n// reducers\nimport {\n  initialState as foodsInitialState,\n  foodsActionTyps,\n  foodsReducer,\n} from '../reducers/foods';\n\n// apis\nimport { fetchFoods } from '../apis/foods';\nimport { postLineFoods, replaceLineFoods } from '../apis/line_foods';\n\n// images\nimport MainLogo from '../images/logo.png';\nimport { FoodOrderDialog } from '../components/FoodOrderDialog';\nimport FoodImage from '../images/food-image.jpg';\n\n// constants\nimport { HTTP_STATUS_CODE } from '../constants';\nimport { COLORS } from '../style_constants';\nimport { REQUEST_STATE } from '../constants';\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 32px;\n`;\nconst BagIconWrapper = styled.div`\n  padding-top: 24px;\n`;\nconst ColoredBagIcon = styled(LocalMallIcon)`\n  color: ${COLORS.MAIN};\n`;\nconst MainLogoImage = styled.img`\n  height: 90px;\n`;\nconst FoodsList = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\nconst ItemWrapper = styled.div`\n  margin: 16px;\n`;\n\n// Foodsコンポーネントがmatchというオブジェクトを受け取る\n// そして、このmatchオブジェクトからmatch.params.restaurantsIdとすることで、React Routerでマッチした:restaurantsIdを取得する\nexport const Foods = ({\n  match\n}) => {\n  const initialState = {\n    isOpenOrderDialog: false,\n    selectedFood: null,\n    selectedFoodCount: 1,\n    isOpenNewOrderDialog: false,\n    existingResutaurautName: '',\n    newResutaurautName: '',\n  };\n  const [state, setState] = useState(initialState);\n  const [foodsState, dispatch] = useReducer(foodsReducer, foodsInitialState);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch({ type: foodsActionTyps.FETCHING });\n    fetchFoods(match.params.restaurantsId)\n      .then((data) => {\n        dispatch({\n          type: foodsActionTyps.FETCH_SUCCESS,\n          payload: {\n            foods: data.foods\n          }\n        });\n      })\n  }, [])\n\n  const submitOrder = () => {\n    postLineFoods({\n      foodId: state.selectedFood.id,\n      count: state.selectedFoodCount,\n    }).then(() => history.push('/orders'))\n      .catch((e) => {\n        if (e.response.status === HTTP_STATUS_CODE.NOT_ACCEPTABLE) {\n          setState({\n            ...state,\n            isOpenOrderDialog: false,\n            isOpenNewOrderDialog: true,\n            existingResutaurautName: e.response.data.existing_restaurant,\n            newResutaurautName: e.response.data.new_restaurant,\n          })\n        } else {\n          throw e;\n        }\n      })\n  };\n\n  const replaceOrder = () => {\n    replaceLineFoods({\n      foodId: state.selectedFood.id,\n      count: state.selectedFoodCount,\n    }).then(() => history.push('/orders'))\n  };\n\n  return (\n    <Fragment>\n      <HeaderWrapper>\n        <Link to=\"/restaurants\">\n          <MainLogoImage src={MainLogo} alt=\"main logo\" />\n        </Link>\n        <BagIconWrapper>\n          <Link to=\"/orders\">\n            <ColoredBagIcon fontSize=\"large\" />\n          </Link>\n        </BagIconWrapper>\n      </HeaderWrapper>\n      <FoodsList>\n        {\n          foodsState.fetchState === REQUEST_STATE.LOADING ?\n            <Fragment>\n              {\n                [...Array(12).keys()].map(i =>\n                  <ItemWrapper key={i}>\n                    <Skeleton key={i} variant=\"rect\" width={450} height={180} />\n                  </ItemWrapper>\n                )\n              }\n            </Fragment>\n          :\n            foodsState.foodsList.map(food =>\n              <ItemWrapper key={food.id}>\n                <FoodWrapper\n                  food={food}\n                  onClickFoodWrapper={\n                    (food) => setState({\n                      ...state,\n                      isOpenOrderDialog: true,\n                      selectedFood: food,\n                    })\n                  }\n                  imageUrl={FoodImage}\n                />\n              </ItemWrapper>\n            )\n        }\n      </FoodsList>\n      {\n        state.isOpenOrderDialog &&\n        <FoodOrderDialog\n        isOpen={state.isOpenOrderDialog}\n        food={state.selectedFood}\n        countNumber={state.selectedFoodCount}\n        onClickCountUp={() => setState({\n          ...state,\n          selectedFoodCount: state.selectedFoodCount + 1,\n        })}\n        onClickCountDown={() => setState({\n          ...state,\n          selectedFoodCount: state.selectedFoodCount - 1,\n        })}\n        // submitOrder関数を渡す\n        onClickOrder={() => submitOrder()}\n        // モーダルを閉じる時はすべてのstateを初期化する\n        onClose={() => setState({\n          ...state,\n          isOpenOrderDialog: false,\n          selectedFood: null,\n          selectedFoodCount: 1,\n        })}\n      />\n      }\n      {\n        state.isOpenNewOrderDialog &&\n        <NewOrderConfirmDialog\n          isOpen={state.isOpenNewOrderDialog}\n          onClose={() => setState({ ...state, isOpenNewOrderDialog: false })}\n          existingResutaurautName={state.existingResutaurautName}\n          newResutaurautName={state.newResutaurautName}\n          onClickSubmit={() => replaceOrder()}\n        />\n      }\n    </Fragment>\n  )\n}\n","/usr/src/app/react-front/src/containers/Restaurants.jsx",[],"/usr/src/app/react-front/src/containers/Orders.jsx",[],"/usr/src/app/react-front/src/apis/restaurants.js",[],"/usr/src/app/react-front/src/urls/index.js",[],"/usr/src/app/react-front/src/reducers/restaurants.js",[],"/usr/src/app/react-front/src/constants.js",[],"/usr/src/app/react-front/src/reducers/foods.js",[],["91","92"],"/usr/src/app/react-front/src/components/FoodWrapper.jsx",[],["93","94"],"/usr/src/app/react-front/src/components/StyledText.jsx",[],"/usr/src/app/react-front/src/components/FoodOrderDialog.jsx",[],"/usr/src/app/react-front/src/components/Buttons/OrderButton.jsx",[],"/usr/src/app/react-front/src/components/NewOrderConfirmDialog.jsx",[],"/usr/src/app/react-front/src/style_constants.js",[],"/usr/src/app/react-front/src/components/Buttons/CountUpButton.jsx",[],"/usr/src/app/react-front/src/apis/line_foods.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":85,"column":6,"nodeType":"105","endLine":85,"endColumn":8,"suggestions":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"95","replacedBy":"109"},{"ruleId":"97","replacedBy":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],["111"],["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.restaurantsId'. Either include it or remove the dependency array.","ArrayExpression",["113"],["111"],["112"],["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [match.params.restaurantsId]",{"range":"116","text":"117"},[2289,2291],"[match.params.restaurantsId]"]